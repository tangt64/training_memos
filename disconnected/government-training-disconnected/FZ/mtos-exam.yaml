- name: exam for middle test for MTOS
  hosts: localhost

  vars:
    password: lookup('community.general.random_string', length=12)
    recovery_livecd: false

  tasks:
    - name: enable to EPEL repository
      package:
        name: epel-release
        state: present

    - name: install exam package
      package:
        name: "{{ item }}"
        state: present
      loop:
        - ddrescue
        - httpd

    - name: root and exam password changed and disabled
      user:
        name: "{{ item }}"
        password: "{{ password }}"
      loop:
        - root
        - exam

    - name: verify to network devices
      shell: nmcli dev | awk '{ print $1 }' | grep eth
      register: count_dev

    - name: setup up bad block device as loopback device
      shell: |
        dd if=/dev/urandom of=/tmp/file bs=500M count=4 status=progress
        sha256sum /tmp/file
        loopdev=$(losetup -f --show /tmp/file)
        echo $loopdev
        dmsetup create file1 << EOF
        0  2048 linear $loopdev 0
        2048  4096 error
        6144  26624 linear $loopdev 6144
        EOF
        dmsetup create file2 << EOF
        0  30720 linear $loopdev 0
        30720  2048 error
        EOF
        dd if=/dev/mapper/file1 of=/dev/null count=2048
        dd if=/dev/mapper/file1 of=/dev/null count=2049
        dd if=/dev/mapper/file2 of=/dev/null count=30720
        dd if=/dev/mapper/file2 of=/dev/null count=30721
        ddrescue -B -v -n /dev/mapper/file1 /tmp/file1 /tmp/log
        ddrescue -B -v -c 16 -r 2 /dev/mapper/file2 /tmp/file1 /tmp/log
        ddrescue -B -v -c 16 -r 2 /dev/mapper/file1 /tmp/file1 /tmp/log
      run_once: true

    - name: get partition info
      community.general.parted:
        device: /dev/sda
        unit: s
      register: sdb_info

    - name: Create 3 equal partition
      parted:
        device: /dev/sdb
        number: "{{ (item | int | abs) + 1 }}"
        label: gpt
        flags: ['lvm']
        name: "disk{{ (item | int | abs) + 1 }}"
        part_start: "{{ (item | int | abs) * 30 }}%"
        part_end: "{{ (item | int | abs) * 30 + 30 }}%"
        unit: "%"
        state: present
      with_sequence: start=0 count=3

    - name: set to LVM2 partition
      filesystem:
        fstype: lvm
        dev: "{{ item }}"
      loop:
        - /dev/sdb1
        - /dev/sdb2
        - /dev/sdb3

    - name: create VG resource in LVM2
      lvg:
        vg: testvg
        pvs: /dev/sdb1,/dev/sdb2,/dev/sdb3

    - name: create LV resource in LVM2
      lvol:
        vg: testvg
        lv: testlv
        size: 100%PVS

    - name: build filesystem as xfs
      filesystem:
        dev: /dev/testvg/testlv
        fstype: xfs

    - name: create a temp directory
      file:
        state: directory
        path: /mnt/testlv

    - name: break and broken to bootloader
      block:
        - name: put the wrong information in /etc/fstab
          lineinfile:
            dest: /etc/fstab
            regexp: '/dev/mapper/rl-swap'
            line: '#/dev/mapper/rl-swap'
        - name: remove mbr recode block
          shell: dd if=/dev/zero of=/dev/sda bs=1024 count=1
          when: recovery_livecd

    - name: mount and make a sample data
      mount:
        path: /mnt/testlv
        src: /dev/testvg/testlv
        fstype: xfs
        state: present

    - name: copy the hacking file
      block:
        - name: copy the hack.sh file
          copy:
            src: hack.sh
            dest: /usr/local/bin/hack.sh
        - name: makes prevent deleting
          shell: |
            chattr -i /usr/local/bin/hack.sh

    - name: dump LVM2 VG metadata
      shell: dd if=/dev/sdb of=/root/lvm_backup_pv.pv bs=1024 count=1

    - name: dump xfs metadata
      shell: xfs_metadump /dev/testvg/testlv /root/testlv_xfs.backup

    - name: make a dummy data on /dev/testvg/testlv
      shell: dd if=/dev/random of=/mnt/testlv/dummy.data bs=500M count=4

    - name: make a damaged to LVM2 PV meta
      shell: dd if=/dev/zero of=/dev/sdc bs=1024 count=1

    - name: make a damaged to the metadata area
      shell: xfs_db -x -c blockget -c "blocktrash -s 1000 -n 300" /dev/testvg/testlv
      ignore_errors: true
      no_log: true

    - name: make httpd.service going to be wrong XD
      block:
        - name: htdocs root
          lineinfile:
            path: /etc/httpd/conf/httpd.conf
            regexp: '^DocumentRoot'
            line: 'DocumentRoot: /htdocs'
        - name: httpd port
          lineinfile:
            path: /etc/httpd/conf/httpd.conf
            search_string: 'Listen: 80'
            line: 'DocumentRoot: 18888'
                
    - name: configure bad user enviornment in exam node
      adduser:
        name: baduser
        comment: "need to banned"
    
    - name: make a disabled and no-strated the httpd.service
      service:
        name: httpd
        state: stopped
        enabled: false
